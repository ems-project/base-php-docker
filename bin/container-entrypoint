#!/bin/bash

PHP_FPM_MAX_CHILDREN_AUTO_RESIZING=${PHP_FPM_MAX_CHILDREN_AUTO_RESIZING:-true}
PHP_FPM_MAX_CHILDREN=${PHP_FPM_MAX_CHILDREN:-40}
PHP_FPM_REQUEST_MAX_MEMORY_IN_MEGABYTES=${PHP_FPM_REQUEST_MAX_MEMORY_IN_MEGABYTES:-16}
CONTAINER_HEAP_PERCENT=${CONTAINER_HEAP_PERCENT:-0.80}

function configure {

  echo "  Setup SSMTP Configuration File ..."
  FILE=/etc/ssmtp/ssmtp.conf
  if [ -w "$FILE" ]; then
    echo "    Write permission is granted, fill environment variables in $FILE"
    if [ -n "${MAIL_SMTP_SERVER+x}" ]; then
      sed -i "s|\${MAIL_SMTP_SERVER}|${MAIL_SMTP_SERVER}|g" $FILE
    fi
    if [ -n "${MAIL_FROM_DOMAIN+x}" ]; then
      sed -i "s|\${MAIL_FROM_DOMAIN}|${MAIL_FROM_DOMAIN}|g" $FILE
    fi
  else
    echo "    Write permission is NOT granted on $FILE, fill environment variables."
  fi

  if [[ "${PHP_FPM_MAX_CHILDREN_AUTO_RESIZING}" == "true" ]]; then
    echo "  Running in Docker Container.  This script check memory settings against QoS."
    echo "  Initial settings : "
    echo "    pm.max_children=${PHP_FPM_MAX_CHILDREN}"
    echo "    php_value[memory_limit]=${PHP_FPM_REQUEST_MAX_MEMORY_IN_MEGABYTES}M"
    echo "    Ratio=${CONTAINER_HEAP_PERCENT}"
  
    # calculate and set max_clients
    . /usr/local/bin/dynamic_resources
    CALCULATED_CLIENTS=`get_max_clients`
    if [ -n "$CALCULATED_CLIENTS" ]; then
      PHP_FPM_MAX_CHILDREN=$CALCULATED_CLIENTS
      if [ $CALCULATED_CLIENTS -lt 1 ]; then
        exit 1
      fi
    fi
    
    echo "  After calculation : "
    echo "    pm.max_children=${PHP_FPM_MAX_CHILDREN}"
    echo "    php_value[memory_limit]=${PHP_FPM_REQUEST_MAX_MEMORY_IN_MEGABYTES}M"
    echo "    Ratio=${CONTAINER_HEAP_PERCENT}"
  fi

  echo "  PHP-FPM Pool Memory Settings : "
  echo "    > pm.max_children=${PHP_FPM_MAX_CHILDREN}"
  echo "    > php_value[memory_limit]=${PHP_FPM_REQUEST_MAX_MEMORY_IN_MEGABYTES}M"

  echo "  Setup PHP-FPM Pool Configuration File(s) ..."
  PATTERN=/usr/local/etc/php-fpm.d/*
  for FILE in $PATTERN ; do
    if [ -w "$FILE" ]; then 
      echo "    Write permission is granted, try to apply default configuration in $FILE with sed."
      if [ -n "${PHP_FPM_MAX_CHILDREN+x}" ]; then
        sed -i "s|\${PHP_FPM_MAX_CHILDREN}|${PHP_FPM_MAX_CHILDREN}|g" $FILE
      fi
      if [ -n "${PHP_FPM_REQUEST_MAX_MEMORY_IN_MEGABYTES+x}" ]; then
        sed -i "s|\${PHP_FPM_REQUEST_MAX_MEMORY_IN_MEGABYTES}|${PHP_FPM_REQUEST_MAX_MEMORY_IN_MEGABYTES}|g" $FILE
      fi
    else
      echo "    Write permission is NOT granted on $FILE, do not try to apply default configuration."
    fi
  done

  echo "  Running extra script(s) ..."
  if [ ! -f "/var/lock/phpinit" ]; then
  
      for f in /opt/bin/container-entrypoint.d/*; do
          case "$f" in
              *.sh)     echo "    $0: running $f"; . "$f" ;;
              *.php)    echo "    $0: running $f"; php -f "$f"; echo ;;
              *)        echo "    $0: ignoring $f" ;;
          esac
      done
  
      touch /var/lock/phpinit
  fi

}

echo "Configure php-fpm Container ..."
configure
echo "php-fpm Container configured succesfully ..."

set -eu
cmd="$1"; shift
exec $cmd "$@"
