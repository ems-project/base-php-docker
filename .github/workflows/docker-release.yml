name: Docker Release

run-name: Docker Release ${{ github.ref_name }} by @${{ github.actor }}

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'

jobs:

  init:

    runs-on: ubuntu-20.04

    outputs:
      version-patch: ${{ steps.prep.outputs.version-patch }}
      version-minor: ${{ steps.prep.outputs.version-minor }}
      version-major: ${{ steps.prep.outputs.version-major }}
      build-date: ${{ steps.prep.outputs.build-date }}
      phpfpm-prd-docker-image-name: ${{ steps.prep.outputs.phpfpm-prd-docker-image-name }}
      phpfpm-prd-docker-image-tags: ${{ steps.meta-phpfpm-prd.outputs.tags }}
      phpfpm-prd-docker-image-labels: ${{ steps.meta-phpfpm-prd.outputs.labels }}
      phpfpm-dev-docker-image-name: ${{ steps.prep.outputs.phpfpm-dev-docker-image-name }}
      phpfpm-dev-docker-image-tags: ${{ steps.meta-phpfpm-dev.outputs.tags }}
      phpfpm-dev-docker-image-labels: ${{ steps.meta-phpfpm-dev.outputs.labels }}
      phpcli-prd-docker-image-name: ${{ steps.prep.outputs.phpcli-prd-docker-image-name }}
      phpcli-prd-docker-image-tags: ${{ steps.meta-phpcli-prd.outputs.tags }}
      phpcli-prd-docker-image-labels: ${{ steps.meta-phpcli-prd.outputs.labels }}
      phpcli-dev-docker-image-name: ${{ steps.prep.outputs.phpcli-dev-docker-image-name }}
      phpcli-dev-docker-image-tags: ${{ steps.meta-phpcli-dev.outputs.tags }}
      phpcli-dev-docker-image-labels: ${{ steps.meta-phpcli-dev.outputs.labels }}
      apache-prd-docker-image-name: ${{ steps.prep.outputs.apache-prd-docker-image-name }}
      apache-prd-docker-image-tags: ${{ steps.meta-apache-prd.outputs.tags }}
      apache-prd-docker-image-labels: ${{ steps.meta-apache-prd.outputs.labels }}
      apache-dev-docker-image-name: ${{ steps.prep.outputs.apache-dev-docker-image-name }}
      apache-dev-docker-image-tags: ${{ steps.meta-apache-dev.outputs.tags }}
      apache-dev-docker-image-labels: ${{ steps.meta-apache-dev.outputs.labels }}
      nginx-prd-docker-image-name: ${{ steps.prep.outputs.nginx-prd-docker-image-name }}
      nginx-prd-docker-image-tags: ${{ steps.meta-nginx-prd.outputs.tags }}
      nginx-prd-docker-image-labels: ${{ steps.meta-nginx-prd.outputs.labels }}
      nginx-dev-docker-image-name: ${{ steps.prep.outputs.nginx-dev-docker-image-name }}
      nginx-dev-docker-image-tags: ${{ steps.meta-nginx-dev.outputs.tags }}
      nginx-dev-docker-image-labels: ${{ steps.meta-nginx-dev.outputs.labels }}
      github-ci-run-id: ${{ steps.prep.outputs.github-ci-run-id }}
      github-ci-sha-short: ${{ steps.prep.outputs.github-ci-sha-short }}
      github-ci-sha: ${{ steps.prep.outputs.github-ci-sha }}
      aws-cli-version: ${{ steps.prep.outputs.aws-cli-version }}

    steps:
      - uses: actions/checkout@v3

      - name: Fill GitHub Environment Variables
        uses: FranzDiebold/github-env-vars-action@v2

      - name: Fill PHP Version Environment Variable
        uses: c-py/action-dotenv-to-setenv@v4
        with:
          env-file: .build.env

      - name: Prepare Workflow Environment
        id: prep
        run: |
          VERSION_MAJOR_MINOR_PATCH=${GITHUB_REF_NAME}
          VERSION_MAJOR_MINOR=${VERSION_MAJOR_MINOR_PATCH%.*}
          VERSION_MAJOR=${VERSION_MAJOR_MINOR%.*}
          echo "phpfpm-prd-docker-image-name=${PHPFPM_PRD_DOCKER_IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "phpfpm-dev-docker-image-name=${PHPFPM_DEV_DOCKER_IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "phpcli-prd-docker-image-name=${PHPCLI_PRD_DOCKER_IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "phpcli-dev-docker-image-name=${PHPCLI_DEV_DOCKER_IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "apache-prd-docker-image-name=${APACHE_PRD_DOCKER_IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "apache-dev-docker-image-name=${APACHE_DEV_DOCKER_IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "nginx-prd-docker-image-name=${NGINX_PRD_DOCKER_IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "nginx-dev-docker-image-name=${NGINX_DEV_DOCKER_IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "version-patch=${VERSION_MAJOR_MINOR_PATCH}" >> $GITHUB_OUTPUT
          echo "version-minor=${VERSION_MAJOR_MINOR}" >> $GITHUB_OUTPUT
          echo "version-major=${VERSION_MAJOR}" >> $GITHUB_OUTPUT
          echo "build-date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          echo "github-ci-sha-short=${CI_SHA_SHORT}" >> $GITHUB_OUTPUT
          echo "github-ci-sha=${CI_SHA}" >> $GITHUB_OUTPUT
          echo "github-ci-run-id=${CI_RUN_ID}" >> $GITHUB_OUTPUT
          echo "aws-cli-version=${AWS_CLI_VERSION}" >> $GITHUB_OUTPUT

      - name: Fill "${{ steps.prep.outputs.phpfpm-prd-docker-image-name }}" Docker Image metadata
        id: meta-phpfpm-prd
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: "${{ steps.prep.outputs.phpfpm-prd-docker-image-name }}"
          tags: |
            type=raw,value=${{ steps.prep.outputs.github-ci-sha-short }}
            type=raw,value=${{ steps.prep.outputs.version-patch }}
            type=raw,value=${{ steps.prep.outputs.version-minor }}
            type=raw,value=latest

      - name: Fill "${{ steps.prep.outputs.phpfpm-dev-docker-image-name }}" Docker Image metadata
        id: meta-phpfpm-dev
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: "${{ steps.prep.outputs.phpfpm-dev-docker-image-name }}"
          tags: |
            type=raw,value=${{ steps.prep.outputs.github-ci-sha-short }}
            type=raw,value=${{ steps.prep.outputs.version-patch }}
            type=raw,value=${{ steps.prep.outputs.version-minor }}
            type=raw,value=latest

      - name: Fill "${{ steps.prep.outputs.phpcli-prd-docker-image-name }}" Docker Image metadata
        id: meta-phpcli-prd
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: "${{ steps.prep.outputs.phpcli-prd-docker-image-name }}"
          tags: |
            type=raw,value=${{ steps.prep.outputs.github-ci-sha-short }}
            type=raw,value=${{ steps.prep.outputs.version-patch }}
            type=raw,value=${{ steps.prep.outputs.version-minor }}
            type=raw,value=latest

      - name: Fill "${{ steps.prep.outputs.phpcli-dev-docker-image-name }}" Docker Image metadata
        id: meta-phpcli-dev
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: "${{ steps.prep.outputs.phpcli-dev-docker-image-name }}"
          tags: |
            type=raw,value=${{ steps.prep.outputs.github-ci-sha-short }}
            type=raw,value=${{ steps.prep.outputs.version-patch }}
            type=raw,value=${{ steps.prep.outputs.version-minor }}
            type=raw,value=latest

      - name: Fill "${{ steps.prep.outputs.apache-prd-docker-image-name }}" Docker Image metadata
        id: meta-apache-prd
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: "${{ steps.prep.outputs.apache-prd-docker-image-name }}"
          tags: |
            type=raw,value=${{ steps.prep.outputs.github-ci-sha-short }}
            type=raw,value=${{ steps.prep.outputs.version-patch }}
            type=raw,value=${{ steps.prep.outputs.version-minor }}
            type=raw,value=latest

      - name: Fill "${{ steps.prep.outputs.apache-dev-docker-image-name }}" Docker Image metadata
        id: meta-apache-dev
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: "${{ steps.prep.outputs.apache-dev-docker-image-name }}"
          tags: |
            type=raw,value=${{ steps.prep.outputs.github-ci-sha-short }}
            type=raw,value=${{ steps.prep.outputs.version-patch }}
            type=raw,value=${{ steps.prep.outputs.version-minor }}
            type=raw,value=latest

      - name: Fill "${{ steps.prep.outputs.nginx-prd-docker-image-name }}" Docker Image metadata
        id: meta-nginx-prd
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: "${{ steps.prep.outputs.nginx-prd-docker-image-name }}"
          tags: |
            type=raw,value=${{ steps.prep.outputs.github-ci-sha-short }}
            type=raw,value=${{ steps.prep.outputs.version-patch }}
            type=raw,value=${{ steps.prep.outputs.version-minor }}
            type=raw,value=latest

      - name: Fill "${{ steps.prep.outputs.nginx-dev-docker-image-name }}" Docker Image metadata
        id: meta-nginx-dev
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: "${{ steps.prep.outputs.nginx-dev-docker-image-name }}"
          tags: |
            type=raw,value=${{ steps.prep.outputs.github-ci-sha-short }}
            type=raw,value=${{ steps.prep.outputs.version-patch }}
            type=raw,value=${{ steps.prep.outputs.version-minor }}
            type=raw,value=latest

  build:

    runs-on: ubuntu-20.04
    needs: init
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build "${{ needs.init.outputs.phpfpm-prd-docker-image-name }}" Docker Image
        id: build-phpfpm-prd
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          target: fpm-prd
          build-args: |
            VERSION_ARG=${{ needs.init.outputs.version-patch }}
            RELEASE_ARG=${{ needs.init.outputs.github-ci-run-id }}
            VCS_REF_ARG=${{ needs.init.outputs.github-ci-sha }}
            BUILD_DATE_ARG=${{ needs.init.outputs.build-date }}
          tags: ${{ needs.init.outputs.phpfpm-prd-docker-image-tags }}
          labels: ${{ needs.init.outputs.phpfpm-prd-docker-image-labels }}
          outputs: type=docker,dest=/tmp/phpfpm-prd-builded.tar

      - name: Build "${{ needs.init.outputs.phpfpm-dev-docker-image-name }}" Docker Image
        id: build-phpfpm-dev
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          target: fpm-dev
          build-args: |
            VERSION_ARG=${{ needs.init.outputs.version-patch }}
            RELEASE_ARG=${{ needs.init.outputs.github-ci-run-id }}
            VCS_REF_ARG=${{ needs.init.outputs.github-ci-sha }}
            BUILD_DATE_ARG=${{ needs.init.outputs.build-date }}
          tags: ${{ needs.init.outputs.phpfpm-dev-docker-image-tags }}
          labels: ${{ needs.init.outputs.phpfpm-dev-docker-image-labels }}
          outputs: type=docker,dest=/tmp/phpfpm-dev-builded.tar

      - name: Build "${{ needs.init.outputs.phpcli-prd-docker-image-name }}" Docker Image
        id: build-phpcli-prd
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          target: cli-prd
          build-args: |
            VERSION_ARG=${{ needs.init.outputs.version-patch }}
            RELEASE_ARG=${{ needs.init.outputs.github-ci-run-id }}
            VCS_REF_ARG=${{ needs.init.outputs.github-ci-sha }}
            BUILD_DATE_ARG=${{ needs.init.outputs.build-date }}
          tags: ${{ needs.init.outputs.phpcli-prd-docker-image-tags }}
          labels: ${{ needs.init.outputs.phpcli-prd-docker-image-labels }}
          outputs: type=docker,dest=/tmp/phpcli-prd-builded.tar

      - name: Build "${{ needs.init.outputs.phpcli-dev-docker-image-name }}" Docker Image
        id: build-phpcli-dev
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          target: cli-dev
          build-args: |
            VERSION_ARG=${{ needs.init.outputs.version-patch }}
            RELEASE_ARG=${{ needs.init.outputs.github-ci-run-id }}
            VCS_REF_ARG=${{ needs.init.outputs.github-ci-sha }}
            BUILD_DATE_ARG=${{ needs.init.outputs.build-date }}
          tags: ${{ needs.init.outputs.phpcli-dev-docker-image-tags }}
          labels: ${{ needs.init.outputs.phpcli-dev-docker-image-labels }}
          outputs: type=docker,dest=/tmp/phpcli-dev-builded.tar

      - name: Build "${{ needs.init.outputs.apache-prd-docker-image-name }}" Docker Image
        id: build-apache-prd
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          target: apache-prd
          build-args: |
            VERSION_ARG=${{ needs.init.outputs.version-patch }}
            RELEASE_ARG=${{ needs.init.outputs.github-ci-run-id }}
            VCS_REF_ARG=${{ needs.init.outputs.github-ci-sha }}
            BUILD_DATE_ARG=${{ needs.init.outputs.build-date }}
          tags: ${{ needs.init.outputs.apache-prd-docker-image-tags }}
          labels: ${{ needs.init.outputs.apache-prd-docker-image-labels }}
          outputs: type=docker,dest=/tmp/apache-prd-builded.tar

      - name: Build "${{ needs.init.outputs.apache-dev-docker-image-name }}" Docker Image
        id: build-apache-dev
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          target: apache-dev
          build-args: |
            VERSION_ARG=${{ needs.init.outputs.version-patch }}
            RELEASE_ARG=${{ needs.init.outputs.github-ci-run-id }}
            VCS_REF_ARG=${{ needs.init.outputs.github-ci-sha }}
            BUILD_DATE_ARG=${{ needs.init.outputs.build-date }}
          tags: ${{ needs.init.outputs.apache-dev-docker-image-tags }}
          labels: ${{ needs.init.outputs.apache-dev-docker-image-labels }}
          outputs: type=docker,dest=/tmp/apache-dev-builded.tar

      - name: Build "${{ needs.init.outputs.nginx-prd-docker-image-name }}" Docker Image
        id: build-nginx-prd
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          target: nginx-prd
          build-args: |
            VERSION_ARG=${{ needs.init.outputs.version-patch }}
            RELEASE_ARG=${{ needs.init.outputs.github-ci-run-id }}
            VCS_REF_ARG=${{ needs.init.outputs.github-ci-sha }}
            BUILD_DATE_ARG=${{ needs.init.outputs.build-date }}
          tags: ${{ needs.init.outputs.nginx-prd-docker-image-tags }}
          labels: ${{ needs.init.outputs.nginx-prd-docker-image-labels }}
          outputs: type=docker,dest=/tmp/nginx-prd-builded.tar

      - name: Build "${{ needs.init.outputs.nginx-dev-docker-image-name }}" Docker Image
        id: build-nginx-dev
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          target: nginx-dev
          build-args: |
            VERSION_ARG=${{ needs.init.outputs.version-patch }}
            RELEASE_ARG=${{ needs.init.outputs.github-ci-run-id }}
            VCS_REF_ARG=${{ needs.init.outputs.github-ci-sha }}
            BUILD_DATE_ARG=${{ needs.init.outputs.build-date }}
          tags: ${{ needs.init.outputs.nginx-dev-docker-image-tags }}
          labels: ${{ needs.init.outputs.nginx-dev-docker-image-labels }}
          outputs: type=docker,dest=/tmp/nginx-dev-builded.tar

      - name: Install Docker Squash
        id: install-squash
        run: |
          pip install docker-squash

      - name: Squash "${{ needs.init.outputs.phpfpm-prd-docker-image-name }}" Docker Image
        id: squash-phpfpm-prd
        run: |
          cat /tmp/phpfpm-prd-builded.tar | docker load
          docker-squash --verbose --message "Build and Squashed in GitHub Action" \
            --tag ${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }} \
            --output-path /tmp/phpfpm-prd-squashed.tar \
            --cleanup \
            ${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          cat /tmp/phpfpm-prd-squashed.tar | docker load         
          tags=$(echo "${{ needs.init.outputs.phpfpm-prd-docker-image-tags }}" | tr "\n" " ")
          for tag in $tags; do
            docker tag ${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }} $tag
          done
          docker save --output /tmp/phpfpm-prd-final.tar $tags

      - name: Squash "${{ needs.init.outputs.phpfpm-dev-docker-image-name }}" Docker Image
        id: squash-phpfpm-dev
        run: |
          cat /tmp/phpfpm-dev-builded.tar | docker load
          docker-squash --verbose --message "Build and Squashed in GitHub Action" \
            --tag ${{ needs.init.outputs.phpfpm-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }} \
            --output-path /tmp/phpfpm-dev-squashed.tar \
            --cleanup \
            ${{ needs.init.outputs.phpfpm-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          cat /tmp/phpfpm-dev-squashed.tar | docker load         
          tags=$(echo "${{ needs.init.outputs.phpfpm-dev-docker-image-tags }}" | tr "\n" " ")
          for tag in $tags; do
            docker tag ${{ needs.init.outputs.phpfpm-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }} $tag
          done
          docker save --output /tmp/phpfpm-dev-final.tar $tags

      - name: Squash "${{ needs.init.outputs.phpcli-prd-docker-image-name }}" Docker Image
        id: squash-phpcli-prd
        run: |
          cat /tmp/phpcli-prd-builded.tar | docker load
          docker-squash --verbose --message "Build and Squashed in GitHub Action" \
            --tag ${{ needs.init.outputs.phpcli-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }} \
            --output-path /tmp/phpcli-prd-squashed.tar \
            --cleanup \
            ${{ needs.init.outputs.phpcli-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          cat /tmp/phpcli-prd-squashed.tar | docker load         
          tags=$(echo "${{ needs.init.outputs.phpcli-prd-docker-image-tags }}" | tr "\n" " ")
          for tag in $tags; do
            docker tag ${{ needs.init.outputs.phpcli-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }} $tag
          done
          docker save --output /tmp/phpcli-prd-final.tar $tags

      - name: Squash "${{ needs.init.outputs.phpcli-dev-docker-image-name }}" Docker Image
        id: squash-phpcli-dev
        run: |
          cat /tmp/phpcli-dev-builded.tar | docker load
          docker-squash --verbose --message "Build and Squashed in GitHub Action" \
            --tag ${{ needs.init.outputs.phpcli-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }} \
            --output-path /tmp/phpcli-dev-squashed.tar \
            --cleanup \
            ${{ needs.init.outputs.phpcli-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          cat /tmp/phpcli-dev-squashed.tar | docker load         
          tags=$(echo "${{ needs.init.outputs.phpcli-dev-docker-image-tags }}" | tr "\n" " ")
          for tag in $tags; do
            docker tag ${{ needs.init.outputs.phpcli-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }} $tag
          done
          docker save --output /tmp/phpcli-dev-final.tar $tags

      - name: Squash "${{ needs.init.outputs.apache-prd-docker-image-name }}" Docker Image
        id: squash-apache-prd
        run: |
          cat /tmp/apache-prd-builded.tar | docker load
          docker-squash --verbose --message "Build and Squashed in GitHub Action" \
            --tag ${{ needs.init.outputs.apache-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }} \
            --output-path /tmp/apache-prd-squashed.tar \
            --cleanup \
            ${{ needs.init.outputs.apache-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          cat /tmp/apache-prd-squashed.tar | docker load         
          tags=$(echo "${{ needs.init.outputs.apache-prd-docker-image-tags }}" | tr "\n" " ")
          for tag in $tags; do
            docker tag ${{ needs.init.outputs.apache-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }} $tag
          done
          docker save --output /tmp/apache-prd-final.tar $tags

      - name: Squash "${{ needs.init.outputs.apache-dev-docker-image-name }}" Docker Image
        id: squash-apache-dev
        run: |
          cat /tmp/apache-dev-builded.tar | docker load
          docker-squash --verbose --message "Build and Squashed in GitHub Action" \
            --tag ${{ needs.init.outputs.apache-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }} \
            --output-path /tmp/apache-dev-squashed.tar \
            --cleanup \
            ${{ needs.init.outputs.apache-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          cat /tmp/apache-dev-squashed.tar | docker load         
          tags=$(echo "${{ needs.init.outputs.apache-dev-docker-image-tags }}" | tr "\n" " ")
          for tag in $tags; do
            docker tag ${{ needs.init.outputs.apache-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }} $tag
          done
          docker save --output /tmp/apache-dev-final.tar $tags

      - name: Squash "${{ needs.init.outputs.nginx-prd-docker-image-name }}" Docker Image
        id: squash-nginx-prd
        run: |
          cat /tmp/nginx-prd-builded.tar | docker load
          docker-squash --verbose --message "Build and Squashed in GitHub Action" \
            --tag ${{ needs.init.outputs.nginx-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }} \
            --output-path /tmp/nginx-prd-squashed.tar \
            --cleanup \
            ${{ needs.init.outputs.nginx-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          cat /tmp/nginx-prd-squashed.tar | docker load         
          tags=$(echo "${{ needs.init.outputs.nginx-prd-docker-image-tags }}" | tr "\n" " ")
          for tag in $tags; do
            docker tag ${{ needs.init.outputs.nginx-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }} $tag
          done
          docker save --output /tmp/nginx-prd-final.tar $tags

      - name: Squash "${{ needs.init.outputs.nginx-dev-docker-image-tags }}" Docker Image
        id: squash-nginx-dev
        run: |
          cat /tmp/nginx-dev-builded.tar | docker load
          docker-squash --verbose --message "Build and Squashed in GitHub Action" \
            --tag ${{ needs.init.outputs.nginx-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }} \
            --output-path /tmp/nginx-dev-squashed.tar \
            --cleanup \
            ${{ needs.init.outputs.nginx-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          cat /tmp/nginx-dev-squashed.tar | docker load         
          tags=$(echo "${{ needs.init.outputs.nginx-dev-docker-image-tags }}" | tr "\n" " ")
          for tag in $tags; do
            docker tag ${{ needs.init.outputs.nginx-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }} $tag
          done
          docker save --output /tmp/nginx-dev-final.tar $tags

      - name: Check Docker Images
        run: |
          docker image inspect ${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker image inspect ${{ needs.init.outputs.phpfpm-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker image inspect ${{ needs.init.outputs.phpcli-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker image inspect ${{ needs.init.outputs.phpcli-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker image inspect ${{ needs.init.outputs.apache-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker image inspect ${{ needs.init.outputs.apache-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker image inspect ${{ needs.init.outputs.nginx-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker image inspect ${{ needs.init.outputs.nginx-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker history ${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker history ${{ needs.init.outputs.phpfpm-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker history ${{ needs.init.outputs.phpcli-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker history ${{ needs.init.outputs.phpcli-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker history ${{ needs.init.outputs.apache-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker history ${{ needs.init.outputs.apache-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker history ${{ needs.init.outputs.nginx-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker history ${{ needs.init.outputs.nginx-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}

      - name: Upload "${{ needs.init.outputs.phpfpm-prd-docker-image-name }}" Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: phpfpm-prd
          path: /tmp/phpfpm-prd-final.tar

      - name: Upload "${{ needs.init.outputs.phpfpm-dev-docker-image-name }}" Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: phpfpm-dev
          path: /tmp/phpfpm-dev-final.tar

      - name: Upload "${{ needs.init.outputs.phpcli-prd-docker-image-name }}" Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: phpcli-prd
          path: /tmp/phpcli-prd-final.tar

      - name: Upload "${{ needs.init.outputs.phpcli-dev-docker-image-name }}" Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: phpcli-dev
          path: /tmp/phpcli-dev-final.tar

      - name: Upload "${{ needs.init.outputs.apache-prd-docker-image-name }}" Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: apache-prd
          path: /tmp/apache-prd-final.tar

      - name: Upload "${{ needs.init.outputs.apache-dev-docker-image-name }}" Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: apache-dev
          path: /tmp/apache-dev-final.tar

      - name: Upload "${{ needs.init.outputs.nginx-prd-docker-image-name }}" Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: nginx-prd
          path: /tmp/nginx-prd-final.tar

      - name: Upload "${{ needs.init.outputs.nginx-dev-docker-image-name }}" Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: nginx-dev
          path: /tmp/nginx-dev-final.tar

  tests:

    runs-on: ubuntu-20.04
    needs: [init,build]
    steps:
      - uses: actions/checkout@v3

      - name: Setup BATS testing framework
        uses: mig4/setup-bats@v1
        with:
          bats-version: 1.2.1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download "${{ needs.init.outputs.phpfpm-prd-docker-image-name }}" Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: phpfpm-prd
          path: /tmp

      - name: Download "${{ needs.init.outputs.phpcli-prd-docker-image-name }}" Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: phpcli-prd
          path: /tmp

      - name: Download "${{ needs.init.outputs.apache-prd-docker-image-name }}" Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: apache-prd
          path: /tmp

      - name: Download "${{ needs.init.outputs.nginx-prd-docker-image-name }}" Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: nginx-prd
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/phpfpm-prd-final.tar
          docker load --input /tmp/phpcli-prd-final.tar
          docker load --input /tmp/apache-prd-final.tar
          docker load --input /tmp/nginx-prd-final.tar
          docker image ls -a

      - name: Scan "${{ needs.init.outputs.phpfpm-prd-docker-image-name }}" Docker image
        uses: anchore/scan-action@v3
        id: scan-phpfpm
        with:
          image: ${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          fail-build: false
          severity-cutoff: critical
          output-format: table

      - name: Scan "${{ needs.init.outputs.phpcli-prd-docker-image-name }}" Docker image
        uses: anchore/scan-action@v3
        id: scan-phpcli
        with:
          image: ${{ needs.init.outputs.phpcli-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          fail-build: false
          severity-cutoff: critical
          output-format: table

      - name: Scan "${{ needs.init.outputs.apache-prd-docker-image-name }}" Docker image
        uses: anchore/scan-action@v3
        id: scan-apache
        with:
          image: ${{ needs.init.outputs.apache-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          fail-build: false
          severity-cutoff: critical
          output-format: table

      - name: Scan "${{ needs.init.outputs.nginx-prd-docker-image-name }}" Docker image
        uses: anchore/scan-action@v3
        id: scan-nginx
        with:
          image: ${{ needs.init.outputs.nginx-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          fail-build: false
          severity-cutoff: critical
          output-format: table

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Test "${{ needs.init.outputs.phpfpm-prd-docker-image-name }}" Docker Image
        env:
          DOCKER_IMAGE_NAME: ${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
        run: |
          docker network create docker_default
          docker pull appropriate/curl:latest
          bats -r test/tests.fpm.bats

      - name: Test "${{ needs.init.outputs.phpcli-prd-docker-image-name }}" Docker Image
        env:
          DOCKER_IMAGE_NAME: ${{ needs.init.outputs.phpcli-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
        run: |
          bats -r test/tests.cli.bats

      - name: Test "${{ needs.init.outputs.apache-prd-docker-image-name }}" Docker Image
        env:
          DOCKER_IMAGE_NAME: ${{ needs.init.outputs.apache-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
        run: |
          bats -r test/tests.apache.bats

      - name: Test "${{ needs.init.outputs.nginx-prd-docker-image-name }}" Docker Image
        env:
          DOCKER_IMAGE_NAME: ${{ needs.init.outputs.nginx-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
        run: |
          bats -r test/tests.nginx.bats

  sign:

    runs-on: ubuntu-20.04
    needs:  [init,tests]

    steps:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download "${{ needs.init.outputs.phpfpm-prd-docker-image-name }}" Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: phpfpm-prd
          path: /tmp

      - name: Download "${{ needs.init.outputs.phpcli-prd-docker-image-name }}" Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: phpcli-prd
          path: /tmp

      - name: Download "${{ needs.init.outputs.apache-prd-docker-image-name }}" Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: apache-prd
          path: /tmp

      - name: Download "${{ needs.init.outputs.nginx-prd-docker-image-name }}" Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: nginx-prd
          path: /tmp

      - name: Download "${{ needs.init.outputs.phpfpm-dev-docker-image-name }}" Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: phpfpm-dev
          path: /tmp

      - name: Download "${{ needs.init.outputs.phpcli-dev-docker-image-name }}" Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: phpcli-dev
          path: /tmp

      - name: Download "${{ needs.init.outputs.apache-dev-docker-image-name }}" Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: apache-dev
          path: /tmp

      - name: Download "${{ needs.init.outputs.nginx-dev-docker-image-name }}" Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: nginx-dev
          path: /tmp

      - name: Load Docker images
        run: |
          docker load --input /tmp/phpfpm-prd-final.tar
          docker load --input /tmp/apache-prd-final.tar
          docker load --input /tmp/nginx-prd-final.tar
          docker load --input /tmp/phpcli-prd-final.tar
          docker load --input /tmp/phpfpm-dev-final.tar
          docker load --input /tmp/apache-dev-final.tar
          docker load --input /tmp/nginx-dev-final.tar
          docker load --input /tmp/phpcli-dev-final.tar
          docker image ls -a

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Sign and push docker image "${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.version-patch }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.version-patch }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.version-minor }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.version-minor }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:latest"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:latest"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.phpcli-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.phpcli-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.phpcli-prd-docker-image-name }}:${{ needs.init.outputs.version-patch }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.phpcli-prd-docker-image-name }}:${{ needs.init.outputs.version-patch }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.phpcli-prd-docker-image-name }}:${{ needs.init.outputs.version-minor }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.phpcli-prd-docker-image-name }}:${{ needs.init.outputs.version-minor }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.phpcli-prd-docker-image-name }}:latest"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.phpcli-prd-docker-image-name }}:latest"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.phpfpm-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.phpfpm-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.phpfpm-dev-docker-image-name }}:${{ needs.init.outputs.version-patch }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.phpfpm-dev-docker-image-name }}:${{ needs.init.outputs.version-patch }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.phpfpm-dev-docker-image-name }}:${{ needs.init.outputs.version-minor }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.phpfpm-dev-docker-image-name }}:${{ needs.init.outputs.version-minor }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.phpfpm-dev-docker-image-name }}:latest"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.phpfpm-dev-docker-image-name }}:latest"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.phpcli-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.phpcli-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.phpcli-dev-docker-image-name }}:${{ needs.init.outputs.version-patch }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.phpcli-dev-docker-image-name }}:${{ needs.init.outputs.version-patch }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.phpcli-dev-docker-image-name }}:${{ needs.init.outputs.version-minor }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.phpcli-dev-docker-image-name }}:${{ needs.init.outputs.version-minor }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.phpcli-dev-docker-image-name }}:latest"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.phpcli-dev-docker-image-name }}:latest"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.apache-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.apache-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.apache-prd-docker-image-name }}:${{ needs.init.outputs.version-patch }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.apache-prd-docker-image-name }}:${{ needs.init.outputs.version-patch }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.apache-prd-docker-image-name }}:${{ needs.init.outputs.version-minor }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.apache-prd-docker-image-name }}:${{ needs.init.outputs.version-minor }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.apache-prd-docker-image-name }}:latest"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.apache-prd-docker-image-name }}:latest"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.apache-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.apache-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.apache-dev-docker-image-name }}:${{ needs.init.outputs.version-patch }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.apache-dev-docker-image-name }}:${{ needs.init.outputs.version-patch }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.apache-dev-docker-image-name }}:${{ needs.init.outputs.version-minor }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.apache-dev-docker-image-name }}:${{ needs.init.outputs.version-minor }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.apache-dev-docker-image-name }}:latest"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.apache-dev-docker-image-name }}:latest"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.nginx-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.nginx-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.nginx-prd-docker-image-name }}:${{ needs.init.outputs.version-patch }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.nginx-prd-docker-image-name }}:${{ needs.init.outputs.version-patch }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.nginx-prd-docker-image-name }}:${{ needs.init.outputs.version-minor }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.nginx-prd-docker-image-name }}:${{ needs.init.outputs.version-minor }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.nginx-prd-docker-image-name }}:latest"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.nginx-prd-docker-image-name }}:latest"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.nginx-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.nginx-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.nginx-dev-docker-image-name }}:${{ needs.init.outputs.version-patch }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.nginx-dev-docker-image-name }}:${{ needs.init.outputs.version-patch }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.nginx-dev-docker-image-name }}:${{ needs.init.outputs.version-minor }}"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.nginx-dev-docker-image-name }}:${{ needs.init.outputs.version-minor }}"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Sign and push docker image "${{ needs.init.outputs.nginx-dev-docker-image-name }}:latest"
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "${{ needs.init.outputs.nginx-dev-docker-image-name }}:latest"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

      - name: Check Docker Images pull's
        run: |
          docker pull ${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker pull ${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.version-patch }}
          docker pull ${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.version-minor }}
          docker pull ${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:latest
          docker pull ${{ needs.init.outputs.phpfpm-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker pull ${{ needs.init.outputs.phpfpm-dev-docker-image-name }}:${{ needs.init.outputs.version-patch }}
          docker pull ${{ needs.init.outputs.phpfpm-dev-docker-image-name }}:${{ needs.init.outputs.version-minor }}
          docker pull ${{ needs.init.outputs.phpfpm-dev-docker-image-name }}:latest
          docker pull ${{ needs.init.outputs.phpcli-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker pull ${{ needs.init.outputs.phpcli-prd-docker-image-name }}:${{ needs.init.outputs.version-patch }}
          docker pull ${{ needs.init.outputs.phpcli-prd-docker-image-name }}:${{ needs.init.outputs.version-minor }}
          docker pull ${{ needs.init.outputs.phpcli-prd-docker-image-name }}:latest
          docker pull ${{ needs.init.outputs.phpcli-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker pull ${{ needs.init.outputs.phpcli-dev-docker-image-name }}:${{ needs.init.outputs.version-patch }}
          docker pull ${{ needs.init.outputs.phpcli-dev-docker-image-name }}:${{ needs.init.outputs.version-minor }}
          docker pull ${{ needs.init.outputs.phpcli-dev-docker-image-name }}:latest
          docker pull ${{ needs.init.outputs.apache-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker pull ${{ needs.init.outputs.apache-prd-docker-image-name }}:${{ needs.init.outputs.version-patch }}
          docker pull ${{ needs.init.outputs.apache-prd-docker-image-name }}:${{ needs.init.outputs.version-minor }}
          docker pull ${{ needs.init.outputs.apache-prd-docker-image-name }}:latest
          docker pull ${{ needs.init.outputs.apache-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker pull ${{ needs.init.outputs.apache-dev-docker-image-name }}:${{ needs.init.outputs.version-patch }}
          docker pull ${{ needs.init.outputs.apache-dev-docker-image-name }}:${{ needs.init.outputs.version-minor }}
          docker pull ${{ needs.init.outputs.apache-dev-docker-image-name }}:latest
          docker pull ${{ needs.init.outputs.nginx-prd-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker pull ${{ needs.init.outputs.nginx-prd-docker-image-name }}:${{ needs.init.outputs.version-patch }}
          docker pull ${{ needs.init.outputs.nginx-prd-docker-image-name }}:${{ needs.init.outputs.version-minor }}
          docker pull ${{ needs.init.outputs.nginx-prd-docker-image-name }}:latest
          docker pull ${{ needs.init.outputs.nginx-dev-docker-image-name }}:${{ needs.init.outputs.github-ci-sha-short }}
          docker pull ${{ needs.init.outputs.nginx-dev-docker-image-name }}:${{ needs.init.outputs.version-patch }}
          docker pull ${{ needs.init.outputs.nginx-dev-docker-image-name }}:${{ needs.init.outputs.version-minor }}
          docker pull ${{ needs.init.outputs.nginx-dev-docker-image-name }}:latest

      - name: Create the Mattermost Message
        run: |
          echo "{\"text\":\"" > mattermost.json
          echo "# :php: New version of [Base PHP](https://github.com/ems-project/docker-php-fpm) Docker image(s) has been pushed in DockerHub Registry" >> mattermost.json
          echo "| :docker: Docker image Name(s) | Flavor(s) |" >> mattermost.json
          echo "| :--- | :--- |" >> mattermost.json
          echo "| ${{ steps.prep.outputs.dockerhub_phpfpm_prd_image }}:${{ steps.prep.outputs.version_major_minor_patch }} | PHP Only |" >> mattermost.json
          echo "| ${{ steps.prep.outputs.dockerhub_phpfpm_prd_image }}:${{ steps.prep.outputs.version_major_minor }} | PHP Only |" >> mattermost.json
          echo "| ${{ steps.prep.outputs.dockerhub_phpfpm_prd_image }}:latest | PHP Only |" >> mattermost.json
          echo "| ${{ steps.prep.outputs.dockerhub_phpfpm_dev_image }}:${{ steps.prep.outputs.version_major_minor_patch }} | PHP + Composer |" >> mattermost.json
          echo "| ${{ steps.prep.outputs.dockerhub_phpfpm_dev_image }}:${{ steps.prep.outputs.version_major_minor }} | PHP + Composer |" >> mattermost.json
          echo "| ${{ steps.prep.outputs.dockerhub_phpfpm_dev_image }}:latest | PHP + Composer |" >> mattermost.json
          echo "| ${{ steps.prep.outputs.dockerhub_apache_prd_image }}:${{ steps.prep.outputs.version_major_minor_patch }} | PHP + Apache WebServer |" >> mattermost.json
          echo "| ${{ steps.prep.outputs.dockerhub_apache_prd_image }}:${{ steps.prep.outputs.version_major_minor }} | PHP + Apache WebServer |" >> mattermost.json
          echo "| ${{ steps.prep.outputs.dockerhub_apache_prd_image }}:latest | PHP + Apache WebServer |" >> mattermost.json
          echo "| ${{ steps.prep.outputs.dockerhub_apache_dev_image }}:${{ steps.prep.outputs.version_major_minor_patch }} | PHP + Apache WebServer + Composer |" >> mattermost.json
          echo "| ${{ steps.prep.outputs.dockerhub_apache_dev_image }}:${{ steps.prep.outputs.version_major_minor }} | PHP + Apache WebServer + Composer |" >> mattermost.json
          echo "| ${{ steps.prep.outputs.dockerhub_apache_dev_image }}:latest | PHP + Apache WebServer + Composer |" >> mattermost.json
          echo "| ${{ steps.prep.outputs.dockerhub_nginx_prd_image }}:${{ steps.prep.outputs.version_major_minor_patch }} | PHP + NGinx WebServer |" >> mattermost.json
          echo "| ${{ steps.prep.outputs.dockerhub_nginx_prd_image }}:${{ steps.prep.outputs.version_major_minor }} | PHP + NGinx WebServer |" >> mattermost.json
          echo "| ${{ steps.prep.outputs.dockerhub_nginx_prd_image }}:latest | PHP + NGinx WebServer |" >> mattermost.json
          echo "| ${{ steps.prep.outputs.dockerhub_nginx_dev_image }}:${{ steps.prep.outputs.version_major_minor_patch }} | PHP + NGinx WebServer + Composer |" >> mattermost.json
          echo "| ${{ steps.prep.outputs.dockerhub_nginx_dev_image }}:${{ steps.prep.outputs.version_major_minor }} | PHP + NGinx WebServer + Composer |" >> mattermost.json
          echo "| ${{ steps.prep.outputs.dockerhub_nginx_dev_image }}:latest | PHP + NGinx WebServer + Composer |" >> mattermost.json
          echo "\"}" >> mattermost.json
          cat mattermost.json

      - name: Send Mattermost Message
        uses: mattermost/action-mattermost-notify@master
        env:
          MATTERMOST_WEBHOOK_URL: ${{ secrets.MATTERMOST_WEBHOOK_URL }}

  cosign:

    runs-on: ubuntu-20.04
    needs: [init,sign]

    steps:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download Prod PHP artifact
        uses: actions/download-artifact@v3
        with:
          name: phpfpm-prd
          path: /tmp

      - name: Load "${{ needs.init.outputs.phpfpm-prd-docker-image-name }}" Docker image
        run: |
          docker load --input /tmp/phpfpm-prd-final.tar
          docker image ls -a

      - name: Setup Go
        id: go
        uses: actions/setup-go@v3
        with:
          go-version: '^1.12'

      - name: Setup Notary
        id: notary
        run: |
          export GO111MODULE=on
          go install -tags pkcs11 github.com/theupdateframework/notary/cmd/notary@latest
          notary --help

      - name: Setup Cosign
        id: cosign
        uses: sigstore/cosign-installer@main

      - name: Setup Syft
        id: syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Setup Grype
        id: grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Create "${{ needs.init.outputs.phpfpm-prd-docker-image-name }}" manifest
        run: |
          DOCKER_CLI_EXPERIMENTAL=enabled docker manifest create \
              ${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:latest \
              ${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.version-patch }} \
              ${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.version-minor }} \
              --amend

#        - name: Sign and push the manifest "${{ needs.init.outputs.imagename }}:${{ needs.init.outputs.version_major_minor_patch }}"
#          uses: sudo-bot/action-docker-sign@latest
#          with:
#            image-ref: "${{ needs.init.outputs.imagename }}:${{ needs.init.outputs.version_major_minor_patch }}"
#            private-key-id: "${{ secrets.DOCKER_REPOSITORY_PRIVATE_KEY_ID }}"
#            private-key: ${{ secrets.DOCKER_REPOSITORY_PRIVATE_KEY }}
#            private-key-passphrase: ${{ secrets.DOCKER_REPOSITORY_PRIVATE_KEY_PASSPHRASE }}
#            sign-manifest: true
#            notary-auth: "${{ secrets.DOCKERHUB_USERNAME }}:${{ secrets.DOCKERHUB_PASSWORD }}"
#
#        - name: Sign and push the manifest "${{ needs.init.outputs.imagename }}:${{ needs.init.outputs.version_major_minor }}"
#          uses: sudo-bot/action-docker-sign@latest
#          with:
#            image-ref: "${{ needs.init.outputs.imagename }}:${{ needs.init.outputs.version_major_minor }}"
#            private-key-id: "${{ secrets.DOCKER_REPOSITORY_PRIVATE_KEY_ID }}"
#            private-key: ${{ secrets.DOCKER_REPOSITORY_PRIVATE_KEY }}
#            private-key-passphrase: ${{ secrets.DOCKER_REPOSITORY_PRIVATE_KEY_PASSPHRASE }}
#            sign-manifest: true
#            notary-auth: "${{ secrets.DOCKERHUB_USERNAME }}:${{ secrets.DOCKERHUB_PASSWORD }}"
#
#        - name: Sign and push the manifest "${{ needs.init.outputs.imagename }}:${{ needs.init.outputs.version_major }}"
#          uses: sudo-bot/action-docker-sign@latest
#          with:
#            image-ref: "${{ needs.init.outputs.imagename }}:${{ needs.init.outputs.version_major }}"
#            private-key-id: "${{ secrets.DOCKER_REPOSITORY_PRIVATE_KEY_ID }}"
#            private-key: ${{ secrets.DOCKER_REPOSITORY_PRIVATE_KEY }}
#            private-key-passphrase: ${{ secrets.DOCKER_REPOSITORY_PRIVATE_KEY_PASSPHRASE }}
#            sign-manifest: true
#            notary-auth: "${{ secrets.DOCKERHUB_USERNAME }}:${{ secrets.DOCKERHUB_PASSWORD }}"
#
#        - name: Sign and push the manifest "${{ needs.init.outputs.imagename }}:latest"
#          if: github.event_name != 'pull_request'
#          uses: sudo-bot/action-docker-sign@latest
#          with:
#            image-ref: "${{ needs.init.outputs.imagename }}:latest"
#            private-key-id: "${{ secrets.DOCKER_REPOSITORY_PRIVATE_KEY_ID }}"
#            private-key: ${{ secrets.DOCKER_REPOSITORY_PRIVATE_KEY }}
#            private-key-passphrase: ${{ secrets.DOCKER_REPOSITORY_PRIVATE_KEY_PASSPHRASE }}
#            sign-manifest: true
#            notary-auth: "${{ secrets.DOCKERHUB_USERNAME }}:${{ secrets.DOCKERHUB_PASSWORD }}"

      - name: Cosign "${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.version-patch }}"
        run: |
          echo "${COSIGN_KEY}" > /tmp/cosign.key
          cosign sign --key /tmp/cosign.key ${TAGS}
          syft "${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.version-patch }}" -o cyclonedx-json > syft.json
          grype "${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.version-patch }}" -o cyclonedx > grype.json
          cosign attest --predicate syft.json --key /tmp/cosign.key ${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.version-patch }}
          cosign attest --predicate grype.json --key /tmp/cosign.key ${{ needs.init.outputs.phpfpm-prd-docker-image-name }}:${{ needs.init.outputs.version-patch }}
        env:
          TAGS: ${{ needs.init.outputs.phpfpm-prd-docker-image-tags }}
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

  cleanup:

    runs-on: ubuntu-20.04
    needs: [cosign,sign]
    steps:
      - uses: joutvhu/delete-artifact@v1
        with:
          name: |
            phpfpm-prd
            phpfpm-dev
            phpcli-prd
            phpcli-dev
            apache-prd
            apache-dev
            nginx-prd
            nginx-dev